version: "3"

services:
  nginx:
    image: nginx:latest
    volumes:
      - ./src/:/var/www
      - ./_docker/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - "8080:80"
    depends_on:
      - app
    container_name: ${CONTAINER_PREFIX}_nginx

  app:
    image: ${REGISTRY}/dev/app:${CI_COMMIT_SHA}
    environment:
      - APP_KEY=$TEST_APP_KEY
      - APP_NAME=$TEST_APP_NAME
#      - APP_ENV=$APP_ENV
      - APP_ENV=$TEST_APP_ENV
      - APP_URL=$TEST_APP_URL
      - DB_CONNECTION=$TEST_DB_CONNECTION
      - DB_HOST=$TEST_DB_HOST
      - DB_PORT=$TEST_DB_PORT
      - DB_DATABASE=$TEST_DB_DATABASE
      - DB_USERNAME=$TEST_DB_USERNAME
      - DB_PASSWORD=$TEST_DB_PASSWORD
      - APP_DEBUG=$TEST_APP_DEBUG
#      - TEST_DB_DATABASE=$TEST_DB_DATABASE
#      - TEST_DB_USERNAME=$TEST_DB_USERNAME
#      - TEST_DB_PASSWORD=$TEST_DB_PASSWORD

    volumes:
      - ./src/:/var/www
    #      - myuploads:/var/uploads   # Используем созданный Docker Volume

    depends_on:
      - db
    container_name: ${CONTAINER_PREFIX}_app

  db:
    image: mysql:8.0
    restart: always
    volumes:
#      - ./src/tmp/db:/var/lib/mysql
      - /var/lib/mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: $DB_DATABASE
      MYSQL_ROOT_PASSWORD: $DB_PASSWORD
    ports:
      - "8101:3306"
    command:
      - mysqld
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    container_name: ${CONTAINER_PREFIX}_db

  phphmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    ports:
      - "1500:80"
    environment:
      - PMA_HOST=db
    depends_on:
      - db
    container_name: ${CONTAINER_PREFIX}_pma
#volumes:
#  myuploads:   # Определяем Docker Volume